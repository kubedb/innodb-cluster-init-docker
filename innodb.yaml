#secret
apiVersion: v1
kind: Secret
metadata:
  name: innodb-secret
  namespace: default
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: cGFzcw==
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-server
  namespace: default
spec:
  ports:
  - port: 3306
    targetPort: mysql
  selector:
    app: mysql-server
  clusterIP: None
  publishNotReadyAddresses: true
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-server
  namespace: default
spec:
  serviceName: "mysql-server"
  replicas: 3
  selector:
    matchLabels:
      app: mysql-server
  template:
    metadata:
      labels:
        app: mysql-server
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: mysql-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: mysql-server
                topologyKey: failure-domain.beta.kubernetes.io/zone
              weight: 50
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      serviceAccount: peer-finder
      readinessGates:
        - conditionType: "mysql/innodb-ready"
      initContainers:
      - name: innodb-init
        image: kubedb/mysql-innodb-init:8.0.24
        imagePullPolicy: IfNotPresent
        command:
          - "/bin/bash"
          - "-c"
          - "/init-script/run.sh"
        volumeMounts:
          - name: "data"
            mountPath: "/var/lib/mysql"
          - name: "init-scripts"
            mountPath: "/scripts"
# is it redundant in code?
#what happend is its override the /tmp/scripts?
#          - name: "tmp"
#            mountPath: "/tmp/scripts/"
      containers:
      - image: mysql/mysql-server:8.0.23
        imagePullPolicy: IfNotPresent
        name: mysql-server
        command:
          - "/bin/bash"
          - "-c"
#          - "/scripts/peer-finder -ns=default -service=mysql-server -on-start=scripts/on-start.sh"
          - "/scripts/peer-finder -address-type=IP -ns=default -selector=app=mysql-server -on-start=scripts/on-start.sh"
#        args:
#          - "-service=mysql-server"
#          - "-ns=default"
#          - "-on-start=scripts/on-start.sh"
##          - "/scripts/on-start.sh"
        # args: ["--user=root"]
        # args:
        # - sh
        # - "-c"
        # - |
        #   set -ex
        #   [[ $hostname =~ -([0-9]+)$ ]] || exit 1
        #   ordinal=${BASH_REMATCH[1]}
        #   # echo [mysqld] >> /etc/my.cnf
        #   # echo "report_host=mysql-server-$ordinal.mysql-server.demo.svc" >> /etc/my.cnf
        #   # echo "user=root" >> /etc/my.cnf
        #   rhost="mysql-server-$ordinal.mysql-server.$namespace.svc"
        #   /entrypoint.sh mysqld --user=root --report-host=$rhost
        env:
        - name: "MYSQL_ROOT_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "innodb-secret"
              key: "MYSQL_ROOT_PASSWORD"
        - name: "hostname"
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name : "namespace"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: "POD_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name : "POD_IP"
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
          - name: "data"
            mountPath: "/var/lib/mysql"
          - name: "init-scripts"
            mountPath: "/scripts"
# is it redundant in code?
#          - name: "tmp"
#            mountPath: "/tmp"
      volumes:
        - name: "init-scripts"
          emptyDir: {}
        - name : "tmp"
          emptyDir: {}

  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "standard"
      resources:
        requests:
          storage: 1Gi